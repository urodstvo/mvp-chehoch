syntax = "proto3";

option go_package = "/proto";
package proto.auth;


import "google/protobuf/empty.proto";

service Auth {
    rpc Login (LoginRequest) returns (LoginResponse) {}
    rpc Register (RegisterRequest) returns (RegisterResponse) {}
    rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {}

    rpc CheckSession (CheckSessionRequest) returns (CheckSessionResponse) {}
    rpc RefreshSession (RefreshSessionRequest) returns (google.protobuf.Empty) {}

    rpc CheckAccess (CheckAccessRequest) returns (CheckAccessResponse) {}

    rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}
    rpc GetAllUsers(google.protobuf.Empty) returns (GetAllUsersResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty) {}
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {}

    rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse) {}
    rpc GetOrganizations(GetOrganizationsRequest) returns (GetOrganizationsResponse) {}
    rpc GetAllOrganizations(google.protobuf.Empty) returns (GetAllOrganizationsResponse) {}
    rpc CreateOrganization(CreateOrganizationRequest) returns (google.protobuf.Empty) {}
    rpc UpdateOrganization(UpdateOrganizationRequest) returns (google.protobuf.Empty) {}
    rpc DeleteOrganization(DeleteOrganizationRequest) returns (google.protobuf.Empty) {}

}

message User {
    //TODO: add fields
}

message Organization {
    //TODO: add fields
}


message LoginRequest {
    string login = 1;
    string password = 2;
}

message LoginResponse {
    string session_id = 1;
}

message RegisterRequest {
    string login = 1;
    string password = 2;
}

message RegisterResponse {
    string session_id = 1;
}

message LogoutRequest {
    string session_id = 1;
}

message CheckSessionRequest {
    string session_id = 1;
}

message CheckSessionResponse {
    bool valid = 1;
}

message RefreshSessionRequest {
    string session_id = 1;
}

message GetUserRequest {
    string user_id = 1;
}

message GetUserResponse {
    User user = 1;
}

message GetUsersRequest {
    repeated string user_ids = 1;
}

message GetUsersResponse {
    repeated User users = 1;
}

message GetAllUsersResponse {
    repeated User users = 1;
}

message CheckAccessRequest {
    string session_id = 1;
    string endpoint = 2;
}

message CheckAccessResponse {
    bool allowed = 1;
}

message UpdateUserRequest {
    // TODO: add fields
}

message DeleteUserRequest {
    string user_id = 1;
}

message GetOrganizationRequest {
    string organization_id = 1;
}

message GetOrganizationResponse {
    Organization organization = 1;
}

message GetOrganizationsRequest {
    repeated string organization_ids = 1;
}

message GetOrganizationsResponse {
    repeated Organization organizations = 1;
}

message GetAllOrganizationsResponse {
    repeated Organization organizations = 1;
}

message CreateOrganizationRequest {
    // TODO: add fields
}

message UpdateOrganizationRequest {
    // TODO: add fields
}

message DeleteOrganizationRequest {
    string organization_id = 1;
}